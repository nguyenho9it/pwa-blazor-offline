@page "/fetchdata"
@inject HttpClient Http
@using Telerik.DataSource;
@using Telerik.Blazor.Components

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <TelerikGrid Data="forecasts" Sortable="true" Pageable="true">
        <GridColumns>
            <GridColumn Field="@(nameof(WeatherForecast.Date))" Title="Date" />
            <GridColumn Field="@(nameof(WeatherForecast.TemperatureC))" Title="Temp. (C)" />
            <GridColumn Field="@(nameof(WeatherForecast.TemperatureF))" Title="Temp. (F)" />
            <GridColumn Field="@(nameof(WeatherForecast.Summary))" Title="Summary" />
        </GridColumns>
      
    </TelerikGrid>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
