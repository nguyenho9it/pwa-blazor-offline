@page "/printing"
@inject IJSRuntime JSRuntime
@inject HttpClient Http

<PageTitle>Printing Testing</PageTitle>

<h1>Printing testing</h1>
<br />

<button class="btn btn-primary" @onclick="PrintTable">Print Table content</button>
<br />
<br />

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("offline-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}

<br />
<br />

<button class="btn btn-secondary" @onclick="PrintPdf">Print Pdf from local resource</button>
<br />
<br />
<iframe class="pdf-iframe" src="offline-data/blazor.pdf" width="100%" height="600"></iframe>

<script>
    function printTable() {
        window.print();
    }
</script>

<script>
    function printPdf() {
        window.frames[0].print(); // Assuming your PDF is the first (index 0) iframe on the page
    }
</script>

@code {
    private async Task PrintTable()
    {
        await JSRuntime.InvokeVoidAsync("printTable");
    }
}

@code {
    private async Task PrintPdf()
    {
        await JSRuntime.InvokeVoidAsync("printPdf");
    }
}
